/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authSigninRouteImport } from './routes/(auth)/signin'
import { Route as appStoreRouteRouteImport } from './routes/(app)/store/route'
import { Route as appProductsIndexRouteImport } from './routes/(app)/products/index'
import { Route as appOrdersIndexRouteImport } from './routes/(app)/orders/index'
import { Route as appDiscountsIndexRouteImport } from './routes/(app)/discounts/index'
import { Route as appCustomersIndexRouteImport } from './routes/(app)/customers/index'
import { Route as appCategoriesIndexRouteImport } from './routes/(app)/categories/index'
import { Route as appAnalyticsIndexRouteImport } from './routes/(app)/analytics/index'
import { Route as appProductsCreateRouteImport } from './routes/(app)/products/create'
import { Route as appProductsIdRouteImport } from './routes/(app)/products/$id'
import { Route as appCustomersRatingRouteImport } from './routes/(app)/customers/rating'
import { Route as appStoreSettingsIndexRouteImport } from './routes/(app)/store/settings/index'
import { Route as appStorePagesIndexRouteImport } from './routes/(app)/store/pages/index'
import { Route as appStoreMenusIndexRouteImport } from './routes/(app)/store/menus/index'
import { Route as appStoreFilesIndexRouteImport } from './routes/(app)/store/files/index'
import { Route as appStoreArticlesIndexRouteImport } from './routes/(app)/store/articles/index'
import { Route as appProductsCollectionsIndexRouteImport } from './routes/(app)/products/collections/index'
import { Route as appOrdersDraftIndexRouteImport } from './routes/(app)/orders/draft/index'
import { Route as appStoreSettingsShipmentsRouteImport } from './routes/(app)/store/settings/shipments'
import { Route as appStoreSettingsPaymentsRouteImport } from './routes/(app)/store/settings/payments'
import { Route as appStoreSettingsGeneralRouteImport } from './routes/(app)/store/settings/general'
import { Route as appStoreSettingsCheckoutsRouteImport } from './routes/(app)/store/settings/checkouts'
import { Route as appStorePagesCreateRouteImport } from './routes/(app)/store/pages/create'
import { Route as appStorePagesIdRouteImport } from './routes/(app)/store/pages/$id'

const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const appIndexRoute = appIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appRouteRoute,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authRouteRoute,
} as any)
const authSigninRoute = authSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => authRouteRoute,
} as any)
const appStoreRouteRoute = appStoreRouteRouteImport.update({
  id: '/store',
  path: '/store',
  getParentRoute: () => appRouteRoute,
} as any)
const appProductsIndexRoute = appProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => appRouteRoute,
} as any)
const appOrdersIndexRoute = appOrdersIndexRouteImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => appRouteRoute,
} as any)
const appDiscountsIndexRoute = appDiscountsIndexRouteImport.update({
  id: '/discounts/',
  path: '/discounts/',
  getParentRoute: () => appRouteRoute,
} as any)
const appCustomersIndexRoute = appCustomersIndexRouteImport.update({
  id: '/customers/',
  path: '/customers/',
  getParentRoute: () => appRouteRoute,
} as any)
const appCategoriesIndexRoute = appCategoriesIndexRouteImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => appRouteRoute,
} as any)
const appAnalyticsIndexRoute = appAnalyticsIndexRouteImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => appRouteRoute,
} as any)
const appProductsCreateRoute = appProductsCreateRouteImport.update({
  id: '/products/create',
  path: '/products/create',
  getParentRoute: () => appRouteRoute,
} as any)
const appProductsIdRoute = appProductsIdRouteImport.update({
  id: '/products/$id',
  path: '/products/$id',
  getParentRoute: () => appRouteRoute,
} as any)
const appCustomersRatingRoute = appCustomersRatingRouteImport.update({
  id: '/customers/rating',
  path: '/customers/rating',
  getParentRoute: () => appRouteRoute,
} as any)
const appStoreSettingsIndexRoute = appStoreSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => appStoreRouteRoute,
} as any)
const appStorePagesIndexRoute = appStorePagesIndexRouteImport.update({
  id: '/pages/',
  path: '/pages/',
  getParentRoute: () => appStoreRouteRoute,
} as any)
const appStoreMenusIndexRoute = appStoreMenusIndexRouteImport.update({
  id: '/menus/',
  path: '/menus/',
  getParentRoute: () => appStoreRouteRoute,
} as any)
const appStoreFilesIndexRoute = appStoreFilesIndexRouteImport.update({
  id: '/files/',
  path: '/files/',
  getParentRoute: () => appStoreRouteRoute,
} as any)
const appStoreArticlesIndexRoute = appStoreArticlesIndexRouteImport.update({
  id: '/articles/',
  path: '/articles/',
  getParentRoute: () => appStoreRouteRoute,
} as any)
const appProductsCollectionsIndexRoute =
  appProductsCollectionsIndexRouteImport.update({
    id: '/products/collections/',
    path: '/products/collections/',
    getParentRoute: () => appRouteRoute,
  } as any)
const appOrdersDraftIndexRoute = appOrdersDraftIndexRouteImport.update({
  id: '/orders/draft/',
  path: '/orders/draft/',
  getParentRoute: () => appRouteRoute,
} as any)
const appStoreSettingsShipmentsRoute =
  appStoreSettingsShipmentsRouteImport.update({
    id: '/settings/shipments',
    path: '/settings/shipments',
    getParentRoute: () => appStoreRouteRoute,
  } as any)
const appStoreSettingsPaymentsRoute =
  appStoreSettingsPaymentsRouteImport.update({
    id: '/settings/payments',
    path: '/settings/payments',
    getParentRoute: () => appStoreRouteRoute,
  } as any)
const appStoreSettingsGeneralRoute = appStoreSettingsGeneralRouteImport.update({
  id: '/settings/general',
  path: '/settings/general',
  getParentRoute: () => appStoreRouteRoute,
} as any)
const appStoreSettingsCheckoutsRoute =
  appStoreSettingsCheckoutsRouteImport.update({
    id: '/settings/checkouts',
    path: '/settings/checkouts',
    getParentRoute: () => appStoreRouteRoute,
  } as any)
const appStorePagesCreateRoute = appStorePagesCreateRouteImport.update({
  id: '/pages/create',
  path: '/pages/create',
  getParentRoute: () => appStoreRouteRoute,
} as any)
const appStorePagesIdRoute = appStorePagesIdRouteImport.update({
  id: '/pages/$id',
  path: '/pages/$id',
  getParentRoute: () => appStoreRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/store': typeof appStoreRouteRouteWithChildren
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/customers/rating': typeof appCustomersRatingRoute
  '/products/$id': typeof appProductsIdRoute
  '/products/create': typeof appProductsCreateRoute
  '/analytics': typeof appAnalyticsIndexRoute
  '/categories': typeof appCategoriesIndexRoute
  '/customers': typeof appCustomersIndexRoute
  '/discounts': typeof appDiscountsIndexRoute
  '/orders': typeof appOrdersIndexRoute
  '/products': typeof appProductsIndexRoute
  '/store/pages/$id': typeof appStorePagesIdRoute
  '/store/pages/create': typeof appStorePagesCreateRoute
  '/store/settings/checkouts': typeof appStoreSettingsCheckoutsRoute
  '/store/settings/general': typeof appStoreSettingsGeneralRoute
  '/store/settings/payments': typeof appStoreSettingsPaymentsRoute
  '/store/settings/shipments': typeof appStoreSettingsShipmentsRoute
  '/orders/draft': typeof appOrdersDraftIndexRoute
  '/products/collections': typeof appProductsCollectionsIndexRoute
  '/store/articles': typeof appStoreArticlesIndexRoute
  '/store/files': typeof appStoreFilesIndexRoute
  '/store/menus': typeof appStoreMenusIndexRoute
  '/store/pages': typeof appStorePagesIndexRoute
  '/store/settings': typeof appStoreSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof appIndexRoute
  '/store': typeof appStoreRouteRouteWithChildren
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/customers/rating': typeof appCustomersRatingRoute
  '/products/$id': typeof appProductsIdRoute
  '/products/create': typeof appProductsCreateRoute
  '/analytics': typeof appAnalyticsIndexRoute
  '/categories': typeof appCategoriesIndexRoute
  '/customers': typeof appCustomersIndexRoute
  '/discounts': typeof appDiscountsIndexRoute
  '/orders': typeof appOrdersIndexRoute
  '/products': typeof appProductsIndexRoute
  '/store/pages/$id': typeof appStorePagesIdRoute
  '/store/pages/create': typeof appStorePagesCreateRoute
  '/store/settings/checkouts': typeof appStoreSettingsCheckoutsRoute
  '/store/settings/general': typeof appStoreSettingsGeneralRoute
  '/store/settings/payments': typeof appStoreSettingsPaymentsRoute
  '/store/settings/shipments': typeof appStoreSettingsShipmentsRoute
  '/orders/draft': typeof appOrdersDraftIndexRoute
  '/products/collections': typeof appProductsCollectionsIndexRoute
  '/store/articles': typeof appStoreArticlesIndexRoute
  '/store/files': typeof appStoreFilesIndexRoute
  '/store/menus': typeof appStoreMenusIndexRoute
  '/store/pages': typeof appStorePagesIndexRoute
  '/store/settings': typeof appStoreSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteRouteWithChildren
  '/(auth)': typeof authRouteRouteWithChildren
  '/(app)/store': typeof appStoreRouteRouteWithChildren
  '/(auth)/signin': typeof authSigninRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/customers/rating': typeof appCustomersRatingRoute
  '/(app)/products/$id': typeof appProductsIdRoute
  '/(app)/products/create': typeof appProductsCreateRoute
  '/(app)/analytics/': typeof appAnalyticsIndexRoute
  '/(app)/categories/': typeof appCategoriesIndexRoute
  '/(app)/customers/': typeof appCustomersIndexRoute
  '/(app)/discounts/': typeof appDiscountsIndexRoute
  '/(app)/orders/': typeof appOrdersIndexRoute
  '/(app)/products/': typeof appProductsIndexRoute
  '/(app)/store/pages/$id': typeof appStorePagesIdRoute
  '/(app)/store/pages/create': typeof appStorePagesCreateRoute
  '/(app)/store/settings/checkouts': typeof appStoreSettingsCheckoutsRoute
  '/(app)/store/settings/general': typeof appStoreSettingsGeneralRoute
  '/(app)/store/settings/payments': typeof appStoreSettingsPaymentsRoute
  '/(app)/store/settings/shipments': typeof appStoreSettingsShipmentsRoute
  '/(app)/orders/draft/': typeof appOrdersDraftIndexRoute
  '/(app)/products/collections/': typeof appProductsCollectionsIndexRoute
  '/(app)/store/articles/': typeof appStoreArticlesIndexRoute
  '/(app)/store/files/': typeof appStoreFilesIndexRoute
  '/(app)/store/menus/': typeof appStoreMenusIndexRoute
  '/(app)/store/pages/': typeof appStorePagesIndexRoute
  '/(app)/store/settings/': typeof appStoreSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/store'
    | '/signin'
    | '/signup'
    | '/customers/rating'
    | '/products/$id'
    | '/products/create'
    | '/analytics'
    | '/categories'
    | '/customers'
    | '/discounts'
    | '/orders'
    | '/products'
    | '/store/pages/$id'
    | '/store/pages/create'
    | '/store/settings/checkouts'
    | '/store/settings/general'
    | '/store/settings/payments'
    | '/store/settings/shipments'
    | '/orders/draft'
    | '/products/collections'
    | '/store/articles'
    | '/store/files'
    | '/store/menus'
    | '/store/pages'
    | '/store/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/store'
    | '/signin'
    | '/signup'
    | '/customers/rating'
    | '/products/$id'
    | '/products/create'
    | '/analytics'
    | '/categories'
    | '/customers'
    | '/discounts'
    | '/orders'
    | '/products'
    | '/store/pages/$id'
    | '/store/pages/create'
    | '/store/settings/checkouts'
    | '/store/settings/general'
    | '/store/settings/payments'
    | '/store/settings/shipments'
    | '/orders/draft'
    | '/products/collections'
    | '/store/articles'
    | '/store/files'
    | '/store/menus'
    | '/store/pages'
    | '/store/settings'
  id:
    | '__root__'
    | '/(app)'
    | '/(auth)'
    | '/(app)/store'
    | '/(auth)/signin'
    | '/(auth)/signup'
    | '/(app)/'
    | '/(app)/customers/rating'
    | '/(app)/products/$id'
    | '/(app)/products/create'
    | '/(app)/analytics/'
    | '/(app)/categories/'
    | '/(app)/customers/'
    | '/(app)/discounts/'
    | '/(app)/orders/'
    | '/(app)/products/'
    | '/(app)/store/pages/$id'
    | '/(app)/store/pages/create'
    | '/(app)/store/settings/checkouts'
    | '/(app)/store/settings/general'
    | '/(app)/store/settings/payments'
    | '/(app)/store/settings/shipments'
    | '/(app)/orders/draft/'
    | '/(app)/products/collections/'
    | '/(app)/store/articles/'
    | '/(app)/store/files/'
    | '/(app)/store/menus/'
    | '/(app)/store/pages/'
    | '/(app)/store/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  authRouteRoute: typeof authRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(app)/store': {
      id: '/(app)/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof appStoreRouteRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/products/': {
      id: '/(app)/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof appProductsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/orders/': {
      id: '/(app)/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof appOrdersIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/discounts/': {
      id: '/(app)/discounts/'
      path: '/discounts'
      fullPath: '/discounts'
      preLoaderRoute: typeof appDiscountsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/customers/': {
      id: '/(app)/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof appCustomersIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/categories/': {
      id: '/(app)/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof appCategoriesIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/analytics/': {
      id: '/(app)/analytics/'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof appAnalyticsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/products/create': {
      id: '/(app)/products/create'
      path: '/products/create'
      fullPath: '/products/create'
      preLoaderRoute: typeof appProductsCreateRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/products/$id': {
      id: '/(app)/products/$id'
      path: '/products/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof appProductsIdRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/customers/rating': {
      id: '/(app)/customers/rating'
      path: '/customers/rating'
      fullPath: '/customers/rating'
      preLoaderRoute: typeof appCustomersRatingRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/store/settings/': {
      id: '/(app)/store/settings/'
      path: '/settings'
      fullPath: '/store/settings'
      preLoaderRoute: typeof appStoreSettingsIndexRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/pages/': {
      id: '/(app)/store/pages/'
      path: '/pages'
      fullPath: '/store/pages'
      preLoaderRoute: typeof appStorePagesIndexRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/menus/': {
      id: '/(app)/store/menus/'
      path: '/menus'
      fullPath: '/store/menus'
      preLoaderRoute: typeof appStoreMenusIndexRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/files/': {
      id: '/(app)/store/files/'
      path: '/files'
      fullPath: '/store/files'
      preLoaderRoute: typeof appStoreFilesIndexRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/articles/': {
      id: '/(app)/store/articles/'
      path: '/articles'
      fullPath: '/store/articles'
      preLoaderRoute: typeof appStoreArticlesIndexRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/products/collections/': {
      id: '/(app)/products/collections/'
      path: '/products/collections'
      fullPath: '/products/collections'
      preLoaderRoute: typeof appProductsCollectionsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/orders/draft/': {
      id: '/(app)/orders/draft/'
      path: '/orders/draft'
      fullPath: '/orders/draft'
      preLoaderRoute: typeof appOrdersDraftIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/store/settings/shipments': {
      id: '/(app)/store/settings/shipments'
      path: '/settings/shipments'
      fullPath: '/store/settings/shipments'
      preLoaderRoute: typeof appStoreSettingsShipmentsRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/settings/payments': {
      id: '/(app)/store/settings/payments'
      path: '/settings/payments'
      fullPath: '/store/settings/payments'
      preLoaderRoute: typeof appStoreSettingsPaymentsRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/settings/general': {
      id: '/(app)/store/settings/general'
      path: '/settings/general'
      fullPath: '/store/settings/general'
      preLoaderRoute: typeof appStoreSettingsGeneralRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/settings/checkouts': {
      id: '/(app)/store/settings/checkouts'
      path: '/settings/checkouts'
      fullPath: '/store/settings/checkouts'
      preLoaderRoute: typeof appStoreSettingsCheckoutsRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/pages/create': {
      id: '/(app)/store/pages/create'
      path: '/pages/create'
      fullPath: '/store/pages/create'
      preLoaderRoute: typeof appStorePagesCreateRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
    '/(app)/store/pages/$id': {
      id: '/(app)/store/pages/$id'
      path: '/pages/$id'
      fullPath: '/store/pages/$id'
      preLoaderRoute: typeof appStorePagesIdRouteImport
      parentRoute: typeof appStoreRouteRoute
    }
  }
}

interface appStoreRouteRouteChildren {
  appStorePagesIdRoute: typeof appStorePagesIdRoute
  appStorePagesCreateRoute: typeof appStorePagesCreateRoute
  appStoreSettingsCheckoutsRoute: typeof appStoreSettingsCheckoutsRoute
  appStoreSettingsGeneralRoute: typeof appStoreSettingsGeneralRoute
  appStoreSettingsPaymentsRoute: typeof appStoreSettingsPaymentsRoute
  appStoreSettingsShipmentsRoute: typeof appStoreSettingsShipmentsRoute
  appStoreArticlesIndexRoute: typeof appStoreArticlesIndexRoute
  appStoreFilesIndexRoute: typeof appStoreFilesIndexRoute
  appStoreMenusIndexRoute: typeof appStoreMenusIndexRoute
  appStorePagesIndexRoute: typeof appStorePagesIndexRoute
  appStoreSettingsIndexRoute: typeof appStoreSettingsIndexRoute
}

const appStoreRouteRouteChildren: appStoreRouteRouteChildren = {
  appStorePagesIdRoute: appStorePagesIdRoute,
  appStorePagesCreateRoute: appStorePagesCreateRoute,
  appStoreSettingsCheckoutsRoute: appStoreSettingsCheckoutsRoute,
  appStoreSettingsGeneralRoute: appStoreSettingsGeneralRoute,
  appStoreSettingsPaymentsRoute: appStoreSettingsPaymentsRoute,
  appStoreSettingsShipmentsRoute: appStoreSettingsShipmentsRoute,
  appStoreArticlesIndexRoute: appStoreArticlesIndexRoute,
  appStoreFilesIndexRoute: appStoreFilesIndexRoute,
  appStoreMenusIndexRoute: appStoreMenusIndexRoute,
  appStorePagesIndexRoute: appStorePagesIndexRoute,
  appStoreSettingsIndexRoute: appStoreSettingsIndexRoute,
}

const appStoreRouteRouteWithChildren = appStoreRouteRoute._addFileChildren(
  appStoreRouteRouteChildren,
)

interface appRouteRouteChildren {
  appStoreRouteRoute: typeof appStoreRouteRouteWithChildren
  appIndexRoute: typeof appIndexRoute
  appCustomersRatingRoute: typeof appCustomersRatingRoute
  appProductsIdRoute: typeof appProductsIdRoute
  appProductsCreateRoute: typeof appProductsCreateRoute
  appAnalyticsIndexRoute: typeof appAnalyticsIndexRoute
  appCategoriesIndexRoute: typeof appCategoriesIndexRoute
  appCustomersIndexRoute: typeof appCustomersIndexRoute
  appDiscountsIndexRoute: typeof appDiscountsIndexRoute
  appOrdersIndexRoute: typeof appOrdersIndexRoute
  appProductsIndexRoute: typeof appProductsIndexRoute
  appOrdersDraftIndexRoute: typeof appOrdersDraftIndexRoute
  appProductsCollectionsIndexRoute: typeof appProductsCollectionsIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appStoreRouteRoute: appStoreRouteRouteWithChildren,
  appIndexRoute: appIndexRoute,
  appCustomersRatingRoute: appCustomersRatingRoute,
  appProductsIdRoute: appProductsIdRoute,
  appProductsCreateRoute: appProductsCreateRoute,
  appAnalyticsIndexRoute: appAnalyticsIndexRoute,
  appCategoriesIndexRoute: appCategoriesIndexRoute,
  appCustomersIndexRoute: appCustomersIndexRoute,
  appDiscountsIndexRoute: appDiscountsIndexRoute,
  appOrdersIndexRoute: appOrdersIndexRoute,
  appProductsIndexRoute: appProductsIndexRoute,
  appOrdersDraftIndexRoute: appOrdersDraftIndexRoute,
  appProductsCollectionsIndexRoute: appProductsCollectionsIndexRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

interface authRouteRouteChildren {
  authSigninRoute: typeof authSigninRoute
  authSignupRoute: typeof authSignupRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authSigninRoute: authSigninRoute,
  authSignupRoute: authSignupRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  authRouteRoute: authRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
